/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.38
 * Generated at: 2023-07-13 13:29:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ParkingInfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>AdminPanel</title>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"Parking.css\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<header>\r\n");
      out.write("\t<div class=\"fixed-header\">\r\n");
      out.write("\t\t<nav class=\"navbar navbar-dark bg-secondary justify-content-between\">\r\n");
      out.write("\t\t    <a href=\"AdminDetails.jsp\" class=\"btn btn-info\">Home</a>\r\n");
      out.write("\t\t\t<a style=\"margin-left: 1000px; color: pink;\"\" class=\"navbar-brand\">Welcome,");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dtos.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\r\n");
      out.write("\t\t</nav>\r\n");
      out.write("\t</div>\t\t\r\n");
      out.write("</header>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container\">\t\r\n");
      out.write("\t\t \t<span style=\"margin-left: 200px; color: blue;\"> ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg1 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("\t\t<form action=\"info\" method=\"post\" style=\"background-color: white;  margin-bottom: 10px; margin-left: 200px; margin-right: 200px; border: 1px solid black; border-radius: 10px;\">\r\n");
      out.write("\t\t\t<br><h1  style=\"text-align: center; color: red;\">Parking Info</h1>\r\n");
      out.write("\t\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t\t<label for=\"location\"><b>Location</b></label>\r\n");
      out.write("\t\t\t\t<select name=\"location\" class=\"form-control\" required=\"required\">\r\n");
      out.write("\t\t\t\t<option value=\"\">location</option>\r\n");
      out.write("\t\t\t\t<option value=\"Rajaji-Nagar\">Rajaji-Nagar</option>\r\n");
      out.write("\t\t\t\t<option value=\"kurubarahalli\">Kurubarahalli</option>\r\n");
      out.write("\t\t\t\t<option value=\"btm\">BTM</option>\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t<label for=\"type\"><b>Type</b></label>\r\n");
      out.write("\t\t\t\t<select name=\"type\" class=\"form-control\" required=\"required\">\r\n");
      out.write("\t\t\t\t<option value=\"\">type</option>\r\n");
      out.write("\t\t\t\t<option value=\"2 wheeler\">2-Wheeler</option>\r\n");
      out.write("\t\t\t\t<option value=\"4 wheeler\">4-wheeler</option>\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t<label for=\"classification\"><b>Classification</b></label>\r\n");
      out.write("\t\t\t\t<select name=\"classification\" class=\"form-control\" required=\"required\">\r\n");
      out.write("\t\t\t\t<option value=\"\">classification</option>\r\n");
      out.write("\t\t\t\t<option value=\"bmw\">BMW</option>\r\n");
      out.write("\t\t\t\t<option value=\"dastun\">Dastun</option>\r\n");
      out.write("\t\t\t\t<option value=\"benz\">Benz</option>\r\n");
      out.write("\t\t\t\t<option value=\"bike\">Bike</option>\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t<label for=\"terms\"><b>Terms</b></label>\r\n");
      out.write("\t\t\t\t<select name=\"terms\" class=\"form-control\" required=\"required\">\r\n");
      out.write("\t\t\t\t<option value=\"\">terms</option>\r\n");
      out.write("\t\t\t\t<option value=\"1-day\">1-Day</option>\r\n");
      out.write("\t\t\t\t<option value=\"7-day\">7-Days</option>\r\n");
      out.write("\t\t\t\t<option value=\"15-day\">15-Days</option>\r\n");
      out.write("\t\t\t\t<option value=\"30-day\">30-Days</option>\r\n");
      out.write("\t\t\t\t<option value=\"90-day\">90-Days</option>\r\n");
      out.write("\t\t\t\t<option value=\"180-day\">180-Days</option>\r\n");
      out.write("\t\t\t\t<option value=\"365-day\">365-Days</option>\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t<label for=\"price\"><b>Price</b></label>\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"price\" class=\"form-control\" placeholder=\"Enter Price\" required=\"required\">\r\n");
      out.write("\t\t\t\t<label for=\"discount\"><b>Discount</b></label>\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"discount\" class=\"form-control\" placeholder=\"Enter Discount\" required=\"required\"><br>\r\n");
      out.write("\t\t\t\t<input class=\"btn btn-info\" type=\"submit\" value=\"Save\"><br>\r\n");
      out.write("\t\t\t\t<span></span><br>\r\n");
      out.write("\t\t\t</div>\t\t\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\t\r\n");
      out.write("</body>\r\n");
      out.write("\t<div class=\"fixed-footer\">\r\n");
      out.write("\t\t<footer class=\"bg-secondary text-white\" >\r\n");
      out.write("\t\t    <div class=\"text-center p-3\" style=\"background-color: secondary;\">\r\n");
      out.write("\t\t      Â© 2023 Copyright:\r\n");
      out.write("\t\t      <a style=\"color: blue;\" href=\"https://irfan.xworkz@gmail.com/\">irfan.xworkz@gmail.com</a>  <span style=\"color: orange;\">[LoginTime: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dtos.loginTime }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("]</span>\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t </footer>\r\n");
      out.write("\t</div>\t \r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
